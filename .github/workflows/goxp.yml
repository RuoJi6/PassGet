name: Build and Release PassGet for Windows XP-Compatible

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Build for Windows ${{ matrix.arch }}
        env:
          GOOS: windows
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          echo "Building for $GOARCH..."
          go build -v -ldflags="-s -w" -o passget-windows-${GOARCH}.exe .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: passget-windows-${{ matrix.arch }}
          path: passget-windows-${{ matrix.arch }}.exe

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: PassGet ${{ github.ref_name }}
          files: dist/**/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
